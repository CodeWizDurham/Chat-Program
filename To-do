mqtt: The standard for lot messaging

Client side:
    - the computer that the user is connected to
    - send and read and alter and edit messages
    - very nice gui thats easy for the user
    - only access your messages

Server side:
    - most likely a lower level gui possibly a terminal
    - see all the messages that go through the server
    - Framework for React integration.

Client side todo:
    - Good gui
        - easy to use
        - simplistic
            - lack of unessisary information
            - larger clear text
        - ordering / sorting
            - a - b - c
            - popularity
                - amount of times used
                - time spent one
                - chosen favorite
        - use of images instead of long words
        - use of round elements instead of squares
        - help to navigate through gui
        - use of colors
    - Fast messaging
        - make sure the the messaging is fast and does no take years
        - read messages and typing notifications
        - voice typing messages
    - ability to do group and individual messages
    - ability to send images and videos 
        - displaying those images and not just the file
    - ability to send any files type

Server side todo:

    - message sending/receiving

    - fast messaging and routing
    - ability to handle group and individual messages
    - ability to send any file type
    - saved message logs
    - log in system
        - username and password
        - possible facial recognition
    - decide what framework to use for React integration (Flask, Django?)

Ben:
    - server related things

Eliasyn:
    - graphical interface design
    - look pretty

Mateo:
    - server side stuff
    - message transaction

Done:
    - user authentication
